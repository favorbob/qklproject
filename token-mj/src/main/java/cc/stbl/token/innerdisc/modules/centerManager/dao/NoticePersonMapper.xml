<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.stbl.token.innerdisc.modules.centerManager.dao.NoticePersonMapper">
  <resultMap id="BaseResultMap" type="cc.stbl.token.innerdisc.modules.centerManager.entity.NoticePerson">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="notice_id" jdbcType="VARCHAR" property="noticeId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="is_read" jdbcType="INTEGER" property="isRead" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    id, notice_id, user_id, is_read, create_date, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notice_person
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from notice_person
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cc.stbl.token.innerdisc.modules.centerManager.entity.NoticePerson">
    insert into notice_person (id, notice_id, user_id, 
      is_read, create_date, remarks
      )
    values (#{id,jdbcType=VARCHAR}, #{noticeId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{isRead,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cc.stbl.token.innerdisc.modules.centerManager.entity.NoticePerson">
    insert into notice_person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noticeId != null">
        notice_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="noticeId != null">
        #{noticeId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cc.stbl.token.innerdisc.modules.centerManager.entity.NoticePerson">
    update notice_person
    <set>
      <if test="noticeId != null">
        notice_id = #{noticeId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.stbl.token.innerdisc.modules.centerManager.entity.NoticePerson">
    update notice_person
    set notice_id = #{noticeId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByNoticeIdUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from notice_person
    <where>
      <if test="noticeId != null  and noticeId != ''">
        AND notice_id = #{noticeId}
      </if>
      <if test="userId != null  and userId != ''">
        AND user_id = #{userId}
      </if>
    </where>
  </select>
</mapper>